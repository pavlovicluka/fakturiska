@model IEnumerable<Fakturiska.Models.InvoiceModel>

@{
    ViewBag.Title = "Invoices";
}

<div class="container">
    <div class="modal fade" id="createInvoiceModal" role="dialog">
        <div class="modal-dialog" style="width: 1000px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit Invoice</h4>
                </div>
                <div class="modal-body" id="createInvoiceForm">
                    @Html.Action("CreateInvoice", "Invoice")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    <input type="submit" class="btn btn-success" value="Create" form="invoiceForm" />
                </div>
            </div>
        </div>
    </div>
    <button type="button" class="btn btn-info" data-toggle="modal" data-target="#createInvoiceModal" onclick="setModal('#createInvoiceForm')">Dodaj novu</button>

    <h2>Nove fakture</h2>
    <div class="form-group col-md-3" style="padding-right:0px">
        <div class="input-group">
            <input class="form-control" id="searchInvoices" type="search" placeholder="Pretrazi">
            <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
        </div>
    </div>
    <table id="tableInvoices" class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.InvoiceId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Date)
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @{int count = 0;}
            @foreach (var item in Model)
            {
                count++;
                if (item.Archive == null)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.InvoiceId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td>
                            <div class="modal fade" id="@string.Concat("editInvoiceModal", count)" role="dialog">
                                <div class="modal-dialog" style="width: 1000px;">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                            <h4 class="modal-title">Edit Invoice</h4>
                                        </div>
                                        <div class="modal-body" id="@string.Concat("editInvoiceForm", count)">
                                            @Html.Action("EditInvoice", "Invoice", new { id = item.InvoiceGuid })
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                                            <input type="submit" class="btn btn-success" data-dismiss="modal" value="Edit" form="invoiceForm" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="button" class="btn btn-info" data-toggle="modal" data-target="@string.Concat("#editInvoiceModal", count)" onclick="setModal('@string.Concat("#editInvoiceForm", count)')">Izmeni</button>
                            @Html.ActionLink("Arhiviraj", "ArchiveInvoice", new { id = item.InvoiceGuid }) |
                            @Ajax.ActionLink("Stampaj", "PrintInvoice", new { filePath = item.FilePath }, new AjaxOptions { }) |
                            @Html.ActionLink("Obrisi", "DeleteInvoice", new { id = item.InvoiceGuid })
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <div class="row">
        <div class="col-md-6">
            <h2 class="col-md-offset-4">Pretrazi arhivu faktura</h2>
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-3" style="padding-right:0px">
            <div class="input-group">
                <input class="form-control" id="searchArchive" type="search" placeholder="Pretrazi">
                <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
            </div>
        </div>
        <div class="col-md-2" style="padding-left:0px">
            <select id="categorySelect" class="form-control">
                <option value="0">Broj fakture</option>
                <option value="1">Datum kreiranja</option>
                <option value="2">Predracun</option>
                <option value="3">Racun</option>
                <option value="4">Ulazna</option>
                <option value="5">Placena</option>
                <option value="6">Problematicna</option>
                <option value="7">Suma</option>
                <option value="8">Datum placanja</option>
                <option value="9">Prioritet</option>
                <option value="10">Primalac</option>
                <option value="11">Uplatilac</option>
            </select>
        </div>
    </div>
    <table id="tableArchive" class="table">
        <thead>
            <tr>
                <th data-priority="1">
                    @Html.DisplayNameFor(model => model.InvoiceId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.InvoiceEstimate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.InvoiceTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Incoming)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Paid)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Risk)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Sum)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaidDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PriorityName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReceiverName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PayerName)
                </th>
                <th data-priority="2">

                </th>
            </tr>
        </thead>
        <tbody>

            @{count = 0; }
            @{int isChecked(int? a)
                {
                    if (a.HasValue)
                    {
                        if ((int)a == 1)
                        {
                            return 1;
                        }
                        else
                        {
                            return 0;
                        }
                    }
                    else
                    {
                        return -1;
                    }
                }
            }

            @foreach (var item in Model)
            {
                if (item.Archive == 1)
                {
                    count++;
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.InvoiceId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td>
                            @if (isChecked(item.InvoiceEstimate) == 1)
                            {
                                @: DA
                            }
                            else if (isChecked(item.InvoiceEstimate) == 0)
                            {
                                @: NE
                            }
                        </td>
                        <td>
                            @if (isChecked(item.InvoiceTotal) == 1)
                            {
                                @: DA
                             }
                            else if (isChecked(item.InvoiceTotal) == 0)
                            {
                                @: NE
                             }
                        </td>
                        <td>
                            @if (isChecked(item.Incoming) == 1)
                            {
                                @: DA
                             }
                            else if (isChecked(item.Incoming) == 0)
                            {
                                @: NE
                            }
                        </td>
                        <td>
                            @if (isChecked(item.Paid) == 1)
                            {
                                @: DA
                            }
                            else if (isChecked(item.Paid) == 0)
                            {
                                @: NE
                             }
                        </td>
                        <td>
                            @if (isChecked(item.Risk) == 1)
                            {
                                @: DA
                             }
                            else if (isChecked(item.Risk) == 0)
                            {
                                @: NE
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Sum)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PaidDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PriorityName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReceiverName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PayerName)
                        </td>
                        <td>
                            <div class="modal fade" id="@string.Concat("editArchivedInvoiceModal", count)" role="dialog">
                                <div class="modal-dialog" style="width: 1000px;">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                            <h4 class="modal-title">Edit Invoice</h4>
                                        </div>
                                        <div class="modal-body" id="@string.Concat("editInvoiceForm", count)">
                                            @Html.Action("EditInvoice", "Invoice", new { id = item.InvoiceGuid })
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                                            <input type="submit" class="btn btn-success" value="Edit" form="invoiceForm" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="button" class="btn btn-info" data-toggle="modal" data-target="@string.Concat("#editArchivedInvoiceModal", count)" onclick="setModal('@string.Concat("#editInvoiceForm", count)')">Izmeni</button>
                            @Html.ActionLink("Obrisi", "DeleteInvoice", new { id = item.InvoiceGuid }) |
                            @Ajax.ActionLink("Stampaj", "PrintInvoice", new { filePath = item.FilePath }, new AjaxOptions { })
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@section Scripts {
    @Scripts.Render("~/Scripts/Custom/invoices.js")
    @Scripts.Render("~/Scripts/Custom/invoice.js")
}

