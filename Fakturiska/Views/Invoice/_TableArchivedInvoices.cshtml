@model IEnumerable<Fakturiska.Models.InvoiceModel>

<table id="tableArchive" class="table">
    <thead>
        <tr>
            <th data-priority="1">
                @Html.DisplayNameFor(model => model.InvoiceId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InvoiceEstimate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InvoiceTotal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Incoming)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Paid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Risk)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaidDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PriorityName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReceiverName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PayerName)
            </th>
            <th data-priority="2">

            </th>
        </tr>
    </thead>
    <tbody>

        @{int count = 0;}
        @{int isChecked(int? a)
            {
                if (a.HasValue)
                {
                    if ((int)a == 1)
                    {
                        return 1;
                    }
                    else
                    {
                        return 0;
                    }
                }
                else
                {
                    return -1;
                }
            }
        }

        @foreach (var item in Model)
            {
                if (item.Archive == 1)
                {
                    count++;
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.InvoiceId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @if (isChecked(item.InvoiceEstimate) == 1)
                        {
                            @: DA
                            }
                        else if (isChecked(item.InvoiceEstimate) == 0)
                        {
                            @: NE
                            }
                    </td>
                    <td>
                        @if (isChecked(item.InvoiceTotal) == 1)
                        {
                            @: DA
                             }
                        else if (isChecked(item.InvoiceTotal) == 0)
                        {
                            @: NE
                             }
                    </td>
                    <td>
                        @if (isChecked(item.Incoming) == 1)
                        {
                            @: DA
                             }
                        else if (isChecked(item.Incoming) == 0)
                        {
                            @: NE
                            }
                    </td>
                    <td>
                        @if (isChecked(item.Paid) == 1)
                        {
                            @: DA
                            }
                        else if (isChecked(item.Paid) == 0)
                        {
                            @: NE
                             }
                    </td>
                    <td>
                        @if (isChecked(item.Risk) == 1)
                        {
                            @: DA
                             }
                        else if (isChecked(item.Risk) == 0)
                        {
                            @: NE
                            }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Sum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaidDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PriorityName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReceiverName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PayerName)
                    </td>
                    <td>
                        <div class="modal fade" id="@string.Concat("editArchivedInvoiceModal", count)" role="dialog">
                            <div class="modal-dialog" style="width: 1000px;">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                                        <h4 class="modal-title">Edit Invoice</h4>
                                    </div>
                                    <div class="modal-body" id="@string.Concat("editInvoiceForm", count)">
                                        @Html.Action("EditInvoice", "Invoice", new { id = item.InvoiceGuid })
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                                        <input type="submit" class="btn btn-success" value="Edit" form="invoiceForm" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-info" data-toggle="modal" data-target="@string.Concat("#editArchivedInvoiceModal", count)" onclick="setModal('@string.Concat("#editInvoiceForm", count)')">Izmeni</button>
                        @Html.ActionLink("Obrisi", "DeleteInvoice", new { id = item.InvoiceGuid }) |
                        @Ajax.ActionLink("Stampaj", "PrintInvoice", new { filePath = item.FilePath }, new AjaxOptions { })
                    </td>
                </tr>
            }
        }
    </tbody>
</table>